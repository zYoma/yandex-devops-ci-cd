stages:
  - build
  - test
  - release
  - telegram

include:
  - template: Security/SAST.gitlab-ci.yml

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  FRONTEND_ARTIFACT_URL: ${NEXUS_REPO_FRONTEND_URL}/sausage-store-front/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz
  BACKEND_ARTIFACT_URL: ${NEXUS_REPO_BACKEND_URL}/sausage-store/com/yandex/practicum/devops/sausage-store/${BACKEND_VERSION}/sausage-store-${BACKEND_VERSION}.jar

cache:
  paths:
    - ${CI_PROJECT_DIR}/.m2/repository # для хранения зависимостей бэкенда
    - .npm/ # для хранения зависимостей сборки фронтенда

build-backend-code-job:
  stage: build
  script:
    - echo GE_JOB_ID=$CI_JOB_ID >> backend_job_id.env
    - cd backend
    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository
  artifacts:
    name: release-backend
    paths:
      - backend/target/sausage-store-0.0.1-SNAPSHOT.jar
      - ${CI_PROJECT_DIR}/.m2/
    reports:
      dotenv: backend_job_id.env

build-frontend-code-job:
  stage: build
  script:
    - echo GE_JOB_ID=$CI_JOB_ID >> frontend_job_id.env
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    name: release-frontend
    paths:
      - frontend/dist/frontend
    reports:
      dotenv: frontend_job_id.env

upload-backend-release:
  stage: release
  needs: ["spotbugs-sast", "sonarqube-backend-sast", "build-backend-code-job"]

  script:
    - cd backend
    - mvn -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -s settings.xml -Dversion.application=${VERSION} -DskipTests package

upload-frontend-release:
  stage: release
  needs: ["sonarqube-frontend-sast", "build-frontend-code-job"]
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${FRONTEND_ARTIFACT_URL}

spotbugs-sast:
  dependencies:
    - build-backend-code-job
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 16
    MAVEN_REPO_PATH: $CI_PROJECT_DIR/.m2/repository
  artifacts:
    reports:
      sast: gl-sast-report.json

sonarqube-backend-sast:
  stage: test
  image: maven:3.8-openjdk-16
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_BACKEND}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_BACKEND}
  dependencies:
    - build-backend-code-job

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli
  script:
    - cd frontend
    - >
      sonar-scanner -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONTEND}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_FRONTEND}
  dependencies:
    - build-frontend-code-job

telegram-notification-backend:
  stage: telegram
  script:
    - echo "send backend CURL"
    - |
      curl --fail --output "/dev/null" --silent --show-error --write-out "HTTP response: ${http_code}\n\n" \
        --data "{\"chat_id\": \"${TELEGRAM_CHAT_ID}\", \"text\": \"Вышла новая версия backend сосисочной - ${VERSION}\nСкачать backend можно по ссылке — ${BACKEND_ARTIFACT_URL}\"}" \
        --header "Content-Type: application/json" \
        --request POST \
        "https://api.telegram.org/${TELEGRAM_PRIVATE_TOKEN}/sendMessage"
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^send notification/
  needs:
    - upload-backend-release

telegram-notification-frontend:
  stage: telegram
  script:
    - echo "send frontend CURL"
    - |
      curl --fail --output "/dev/null" --silent --show-error --write-out "HTTP response: ${http_code}\n\n" \
        --data "{\"chat_id\": \"${TELEGRAM_CHAT_ID}\", \"text\": \"Вышла новая версия frontend сосисочной - ${VERSION}\nСкачать frontend можно по ссылке — ${FRONTEND_ARTIFACT_URL}\"}" \
        --header "Content-Type: application/json" \
        --request POST \
        "https://api.telegram.org/${TELEGRAM_PRIVATE_TOKEN}/sendMessage"
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^send notification/
  needs:
    - upload-frontend-release