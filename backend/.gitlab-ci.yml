stages:
  - build
  - release
  - telegram

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  JAVA_OPTS: -XX:MaxRAMPercentage=90
  BACKEND_ARTIFACT_URL:  ${NEXUS_REPO_BACKEND_URL}/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar

cache:
  paths:
    - ${CI_PROJECT_DIR}/.m2/repository

build-backend-code-job:
  stage: build
  script:
    - cd backend
    - mvn package -Dmaven.repo.local=${MAVEN_REPO_PATH}
  artifacts:
    name: release-backend
    paths:
      - ${CI_PROJECT_DIR}/.m2/
  rules:
    - changes:
        - backend/**/*

upload-backend-release:
  stage: release
  needs:
    - build-backend-code-job
  script:
    - cd backend
    - mvn -Dmaven.repo.local=${MAVEN_REPO_PATH} -s settings.xml -DskipTests deploy

telegram-notification-backend:
  stage: telegram
  script:
    - echo "send backend CURL"
    - |
      curl --fail --output "/dev/null" --silent --show-error --write-out "HTTP response: ${http_code}\n\n" \
        --data "{\"chat_id\": \"${TELEGRAM_CHAT_ID}\", \"text\": \"Вышла новая версия backend сосисочной - ${VERSION}\nСкачать backend можно по ссылке — ${BACKEND_ARTIFACT_URL}\"}" \
        --header "Content-Type: application/json" \
        --request POST \
        "https://api.telegram.org/${TELEGRAM_PRIVATE_TOKEN}/sendMessage"
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^send notification/
  needs:
    - upload-backend-release
