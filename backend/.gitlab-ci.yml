before_script:
  #устанавливаем ssh-agent для удобства аутентификации по ssh
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  #сохраняем сгенеренный ранее приватный ключ для раннера
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 600 ~/.ssh
  - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

stages:
#  - build
#  - release
  - deploy

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  JAVA_OPTS: -XX:MaxRAMPercentage=90
  BACKEND_ARTIFACT_URL:  ${NEXUS_REPO_BACKEND_URL}/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar

cache:
  paths:
    - ${CI_PROJECT_DIR}/.m2/repository

#build-backend-code-job:
#  stage: build
#  script:
#    - cd backend
#    - mvn package -Dmaven.repo.local=${MAVEN_REPO_PATH}
#  artifacts:
#    name: release-backend
#    paths:
#      - ${CI_PROJECT_DIR}/.m2/
#  rules:
#    - changes:
#        - backend/**/*
#
#upload-backend-release:
#  stage: release
#  needs:
#    - build-backend-code-job
#  script:
#    - cd backend
#    - mvn -Dmaven.repo.local=${MAVEN_REPO_PATH} -s settings.xml -DskipTests deploy

deploy:
  stage: deploy
  script:
     #выполняем простую команду для проверки
     - ssh ${DEV_USER}@${DEV_HOST} "id"
